#pragma once

#include "poolcore/poolCore.h"
#include "poolcommon/arith_uint256.h"
#include <string.h>

class CCoinLibrary {
public:
  static CCoinInfo get(const char *coinName) {
    CCoinInfo info;
    // PoW algorithms
    if (strcmp(coinName, "ethash") == 0) {
      info.Name = "ethash";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
    } else if (strcmp(coinName, "etchash") == 0) {
      info.Name = "etchash";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
    } else if (strcmp(coinName, "equihash.200.9") == 0) {
      info.Name = "equihash.200.9";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.WorkMultiplier = 256.0;
    } else if (strcmp(coinName, "equihash.184.7") == 0) {
      info.Name = "equihash.184.7";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.WorkMultiplier = 256.0;
    } else if (strcmp(coinName, "equihash.48.5") == 0) {
      info.Name = "equihash.48.5";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.WorkMultiplier = 256.0;
    } else if (strcmp(coinName, "sha256") == 0) {
      info.Name = "sha256";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
    } else if (strcmp(coinName, "scrypt") == 0) {
      info.Name = "scrypt";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
    } else if (strcmp(coinName, "sha3.shake256.16") == 0) {
      info.Name = "sha3.shake256.16";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
    } else if (strcmp(coinName, "qubit") == 0) {
      info.Name = "qubit";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
    } else if (strcmp(coinName, "skein") == 0) {
      info.Name = "skein";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
    } else if (strcmp(coinName, "odocrypt") == 0) {
      info.Name = "odocrypt";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
    } else if (strcmp(coinName, "PrimePOW") == 0) {
      info.Name = "PrimePOW";
      info.PowerUnitType = CCoinInfo::ECPD;
      info.PowerMultLog10 = -3;
    } else if (strcmp(coinName, "x11") == 0) {
      info.Name = "x11";
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
    } else if (strcmp(coinName, "ARRR") == 0) {
      info.Name = "ARRR";
      info.FullName = "Pirate Chain";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {60};
      info.ScriptAddressPrefix = {85};
      info.DefaultRpcPort = 7771;
      info.CoinGeckoName = "pirate-chain";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "ARRR.testnet") == 0) {
      info.Name = "ARRR.testnet";
      info.FullName = "Pirate Chain";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 17771;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "ARRR.regtest") == 0) {
      info.Name = "ARRR.regtest";
      info.FullName = "Pirate Chain";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {60};
      info.ScriptAddressPrefix = {85};
      info.DefaultRpcPort = 18232;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.48.5";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "BTC") == 0) {
      info.Name = "BTC";
      info.FullName = "Bitcoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.Bech32Prefix = "bc";
      info.DefaultRpcPort = 8332;
      info.CoinGeckoName = "bitcoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BTC.testnet") == 0) {
      info.Name = "BTC.testnet";
      info.FullName = "Bitcoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {196};
      info.Bech32Prefix = "tb";
      info.DefaultRpcPort = 18332;
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BTC.regtest") == 0) {
      info.Name = "BTC.regtest";
      info.FullName = "Bitcoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {196};
      info.Bech32Prefix = "bcrt";
      info.DefaultRpcPort = 18443;
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BCHN") == 0) {
      info.Name = "BCHN";
      info.FullName = "Bitcoin Cash Node";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EBCH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 8332;
      info.CoinGeckoName = "bitcoin-cash";
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BELLS") == 0) {
      info.Name = "BELLS";
      info.FullName = "Bellscoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {25};
      info.ScriptAddressPrefix = {30};
      info.DefaultRpcPort = 8332;
      info.CoinGeckoName = "bellscoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BELLS.testnet") == 0) {
      info.Name = "BELLS.testnet";
      info.FullName = "Bellscoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {33};
      info.ScriptAddressPrefix = {22};
      info.DefaultRpcPort = 18332;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BELLS.regtest") == 0) {
      info.Name = "BELLS.regtest";
      info.FullName = "Bellscoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 18443;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BSV") == 0) {
      info.Name = "BSV";
      info.FullName = "Bitcoin SV";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EBCH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 8332;
      info.CoinGeckoName = "bitcoin-cash-sv";
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "BSV.testnet") == 0) {
      info.Name = "BSV.testnet";
      info.FullName = "Bitcoin SV";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EBCH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 18332;
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DASH") == 0) {
      info.Name = "DASH";
      info.FullName = "Dash";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {76};
      info.ScriptAddressPrefix = {16};
      info.DefaultRpcPort = 9998;
      info.CoinGeckoName = "dash";
      info.MinimalConfirmationsNumber = 6;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "x11";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.sha256") == 0) {
      info.Name = "DGB.sha256";
      info.FullName = "Digibyte(sha256)";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {30};
      info.ScriptAddressPrefix = {63};
      info.Bech32Prefix = "dgb";
      info.DefaultRpcPort = 14022;
      info.CoinGeckoName = "digibyte";
      info.ProfitSwitchDefaultCoeff = 0.7;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "sha256";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.sha256.testnet") == 0) {
      info.Name = "DGB.sha256.testnet";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {126};
      info.ScriptAddressPrefix = {140};
      info.Bech32Prefix = "dgbt";
      info.DefaultRpcPort = 14023;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "sha256";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.scrypt") == 0) {
      info.Name = "DGB.scrypt";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {30};
      info.ScriptAddressPrefix = {63};
      info.Bech32Prefix = "dgb";
      info.DefaultRpcPort = 14022;
      info.CoinGeckoName = "digibyte";
      info.ProfitSwitchDefaultCoeff = 0.7;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "scrypt";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.scrypt.testnet") == 0) {
      info.Name = "DGB.scrypt.testnet";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {126};
      info.ScriptAddressPrefix = {140};
      info.Bech32Prefix = "dgbt";
      info.DefaultRpcPort = 14023;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "scrypt";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.qubit") == 0) {
      info.Name = "DGB.qubit";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {30};
      info.ScriptAddressPrefix = {63};
      info.Bech32Prefix = "dgb";
      info.DefaultRpcPort = 14022;
      info.CoinGeckoName = "digibyte";
      info.ProfitSwitchDefaultCoeff = 0.7;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "qubit";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.qubit.testnet") == 0) {
      info.Name = "DGB.qubit.testnet";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {126};
      info.ScriptAddressPrefix = {140};
      info.Bech32Prefix = "dgbt";
      info.DefaultRpcPort = 14023;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "qubit";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.skein") == 0) {
      info.Name = "DGB.skein";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {30};
      info.ScriptAddressPrefix = {63};
      info.Bech32Prefix = "dgb";
      info.DefaultRpcPort = 14022;
      info.CoinGeckoName = "digibyte";
      info.ProfitSwitchDefaultCoeff = 0.7;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "skein";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.skein.testnet") == 0) {
      info.Name = "DGB.skein.testnet";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {126};
      info.ScriptAddressPrefix = {140};
      info.Bech32Prefix = "dgbt";
      info.DefaultRpcPort = 14023;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "skein";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.odo") == 0) {
      info.Name = "DGB.odo";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {30};
      info.ScriptAddressPrefix = {63};
      info.Bech32Prefix = "dgb";
      info.DefaultRpcPort = 14022;
      info.CoinGeckoName = "digibyte";
      info.ProfitSwitchDefaultCoeff = 0.7;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "odocrypt";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DGB.odo.testnet") == 0) {
      info.Name = "DGB.odo.testnet";
      info.FullName = "Digibyte";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {126};
      info.ScriptAddressPrefix = {140};
      info.Bech32Prefix = "dgbt";
      info.DefaultRpcPort = 14023;
      info.MinimalConfirmationsNumber = 32;
      info.Algorithm = "odocrypt";
      info.PowLimit = ArithToUint256(~arith_uint256(static_cast<uint64_t>(0)) >> 20);
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DINGO") == 0) {
      info.Name = "DINGO";
      info.FullName = "Dingocoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {30};
      info.ScriptAddressPrefix = {22};
      info.DefaultRpcPort = 34646;
      info.CoinGeckoName = "dingocoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DINGO.testnet") == 0) {
      info.Name = "DINGO.testnet";
      info.FullName = "Dingocoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {113};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 44555;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DOGE") == 0) {
      info.Name = "DOGE";
      info.FullName = "Dogecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {30};
      info.ScriptAddressPrefix = {22};
      info.DefaultRpcPort = 22555;
      info.CoinGeckoName = "dogecoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
      info.CanBeSecondaryCoin = true;
    } else if (strcmp(coinName, "DOGE.testnet") == 0) {
      info.Name = "DOGE.testnet";
      info.FullName = "Dogecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {113};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 44555;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DOGE.regtest") == 0) {
      info.Name = "DOGE.regtest";
      info.FullName = "Dogecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 18332;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DTC") == 0) {
      info.Name = "DTC";
      info.FullName = "Datacoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::ECPD;
      info.PowerMultLog10 = -3;
      info.PubkeyAddressPrefix = {30};
      info.DefaultRpcPort = 11777;
      info.CoinGeckoName = "datacoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "PrimePOW";
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "DTC.testnet") == 0) {
      info.Name = "DTC";
      info.FullName = "Datacoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::ECPD;
      info.PowerMultLog10 = -3;
      info.PubkeyAddressPrefix = {70};
      info.DefaultRpcPort = 11776;
      info.CoinGeckoName = "datacoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "PrimePOW";
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "ETC") == 0) {
      info.Name = "ETC";
      info.FullName = "Ethereum Classic";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EEth);
      info.RationalPartSize = 1000000000;
      info.ExtraMultiplier = 1;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.DefaultRpcPort = 8545;
      info.CoinGeckoName = "ethereum-classic";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 64;
      info.Algorithm = "etchash";
      info.HasDagFile = true;
      info.BigEpoch = true;
      info.WorkType = EWorkEthereum;
    } else if (strcmp(coinName, "FCH") == 0) {
      info.Name = "FCH";
      info.FullName = "FreeCash";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {35};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 8332;
      info.ProfitSwitchDefaultCoeff = 0.4;
      info.CoinGeckoName = "freecash";
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "FB") == 0) {
      info.Name = "FB";
      info.FullName = "Fractal Bitcoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.Bech32Prefix = "bc";
      info.DefaultRpcPort = 8332;
      info.CoinGeckoName = "fractal-bitcoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
    } else if (strcmp(coinName, "HOOT") == 0) {
      info.Name = "HOOT";
      info.FullName = "Hootchain";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {100};
      info.ScriptAddressPrefix = {15};
      info.DefaultRpcPort = 6886;
      info.CoinGeckoName = "hootchain";
      info.MinimalConfirmationsNumber = 6;
      info.Algorithm = "x11";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
      info.CanBeSecondaryCoin = true;
    } else if (strcmp(coinName, "JKC") == 0) {
      info.Name = "JKC";
      info.FullName = "Junkcoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {16};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 9771;
      info.CoinGeckoName = "junkcoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "JKC.testnet") == 0) {
      info.Name = "JKC.testnet";
      info.FullName = "Junkcoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 19771;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "KMD") == 0) {
      info.Name = "KMD";
      info.FullName = "Komodo";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {60};
      info.ScriptAddressPrefix = {85};
      info.DefaultRpcPort = 7771;
      info.CoinGeckoName = "komodo";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "KMD.testnet") == 0) {
      info.Name = "KMD.testnet";
      info.FullName = "Komodo";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 17771;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "KMD.regtest") == 0) {
      info.Name = "KMD.regtest";
      info.FullName = "Komodo";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {60};
      info.ScriptAddressPrefix = {85};
      info.DefaultRpcPort = 18232;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.48.5";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "LCC") == 0) {
      info.Name = "LCC";
      info.FullName = "LitecoinCash";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {28};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 62457;
      info.ProfitSwitchDefaultCoeff = 0.1;
      info.CoinGeckoName = "litecoin-cash";
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "LKY") == 0) {
      info.Name = "LKY";
      info.FullName = "Luckycoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {47};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 19918;
      info.CoinGeckoName = "luckycoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "LKY.testnet") == 0) {
      info.Name = "LKY.testnet";
      info.FullName = "Luckycoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {113};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 29919;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "LTC") == 0) {
      info.Name = "LTC";
      info.FullName = "Litecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.MWebEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {48};
      info.ScriptAddressPrefix = {50};
      info.Bech32Prefix = "ltc";
      info.DefaultRpcPort = 9332;
      info.CoinGeckoName = "litecoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "LTC.testnet") == 0) {
      info.Name = "LTC.testnet";
      info.FullName = "Litecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.MWebEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {58};
      info.Bech32Prefix = "tltc";
      info.DefaultRpcPort = 19332;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "LTC.regtest") == 0) {
      info.Name = "LTC.regtest";
      info.FullName = "Litecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H | CCoinInfo::EBech32);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.MWebEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {58};
      info.Bech32Prefix = "rltc";
      info.DefaultRpcPort = 19443;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "MAXI") == 0) {
      info.Name = "MAXI";
      info.FullName = "Maximus";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {50};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 9938;
      info.CoinGeckoName = "pepecoin";
      info.MinimalConfirmationsNumber = 6;
      info.Algorithm = "x11";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
      info.CanBeSecondaryCoin = true;
    } else if (strcmp(coinName, "OSMI") == 0) {
      info.Name = "OSMI";
      info.FullName = "Osmium";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {63};
      info.ScriptAddressPrefix = {15};
      info.DefaultRpcPort = 9968;
      info.CoinGeckoName = "osmium";
      info.MinimalConfirmationsNumber = 6;
      info.Algorithm = "x11";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
      info.CanBeSecondaryCoin = true;
    } else if (strcmp(coinName, "PEP") == 0) {
      info.Name = "PEP";
      info.FullName = "Pepecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {56};
      info.ScriptAddressPrefix = {22};
      info.DefaultRpcPort = 33873;
      info.CoinGeckoName = "pepecoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "PEP.testnet") == 0) {
      info.Name = "PEP.testnet";
      info.FullName = "Pepecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = true;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 3;
      info.PubkeyAddressPrefix = {113};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 44873;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "scrypt";
      info.PowLimit = uint256S("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.CanBeSecondaryCoin = true;
      info.ResetWorkOnBlockChange = false;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "SPACE") == 0) {
      info.Name = "SPACE";
      info.FullName = "MVC";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 9882;
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "XEC") == 0) {
      info.Name = "XEC";
      info.FullName = "eCash";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EECash);
      info.RationalPartSize = 100;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {0};
      info.ScriptAddressPrefix = {5};
      info.DefaultRpcPort = 8332;
      info.CoinGeckoName = "ecash";
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.HasRtt = true;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "XEC.testnet") == 0) {
      info.FullName = "eCash testnet";
      info.Name = "XEC.testnet";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EECash);
      info.RationalPartSize = 100;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 6;
      info.PubkeyAddressPrefix = {111};
      info.ScriptAddressPrefix = {196};
      info.DefaultRpcPort = 18332;
      info.Algorithm = "sha256";
      info.PowLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.HasRtt = true;
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "XPM") == 0) {
      info.Name = "XPM";
      info.FullName = "Primecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::ECPD;
      info.PowerMultLog10 = -3;
      info.PubkeyAddressPrefix = {23};
      info.DefaultRpcPort = 9912;
      info.CoinGeckoName = "primecoin";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "PrimePOW";
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "XPM.testnet") == 0) {
      info.Name = "XPM.testnet";
      info.FullName = "Primecoin";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::ECPD;
      info.PowerMultLog10 = -3;
      info.PubkeyAddressPrefix = {111};
      info.DefaultRpcPort = 9914;
      info.MinimalConfirmationsNumber = 12;
      info.Algorithm = "PrimePOW";
      info.WorkType = EWorkBitcoin;
    } else if (strcmp(coinName, "ZEC") == 0) {
      info.Name = "ZEC";
      info.FullName = "ZCash";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0x1C,0xB8};
      info.ScriptAddressPrefix = {0x1C,0xBD};
      info.DefaultRpcPort = 8232;
      info.CoinGeckoName = "zcash";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "ZEC.testnet") == 0) {
      info.Name = "ZEC.testnet";
      info.FullName = "ZCash";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0x1D,0x25};
      info.ScriptAddressPrefix = {0x1C,0xBA};
      info.DefaultRpcPort = 18232;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "ZEC.regtest") == 0) {
      info.Name = "ZEC.regtest";
      info.FullName = "ZCash";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0x1D,0x25};
      info.ScriptAddressPrefix = {0x1C,0xBA};
      info.DefaultRpcPort = 18232;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.48.5";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "ZEN") == 0) {
      info.Name = "ZEN";
      info.FullName = "Horizen";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0x20,0x89};
      info.ScriptAddressPrefix = {0x20,0x96};
      info.DefaultRpcPort = 8231;
      info.CoinGeckoName = "zencash";
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "ZEN.testnet") == 0) {
      info.Name = "ZEN.testnet";
      info.FullName = "Horizen";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0x20,0x98};
      info.ScriptAddressPrefix = {0x20,0x92};
      info.DefaultRpcPort = 18231;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.200.9";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      info.WorkType = EWorkZCash;
    } else if (strcmp(coinName, "ZEN.regtest") == 0) {
      info.Name = "ZEN.regtest";
      info.FullName = "Horizen";
      info.PayoutAddressType = static_cast<CCoinInfo::EAddressType>(CCoinInfo::EP2PKH | CCoinInfo::EPS2H);
      info.RationalPartSize = 100000000;
      info.SegwitEnabled = false;
      info.PowerUnitType = CCoinInfo::EHash;
      info.PowerMultLog10 = 0;
      info.PubkeyAddressPrefix = {0x20,0x89};
      info.ScriptAddressPrefix = {0x20,0x96};
      info.DefaultRpcPort = 18231;
      info.ProfitSwitchDefaultCoeff = 1.0;
      info.Algorithm = "equihash.48.5";
      info.HasExtendedFundRawTransaction = false;
      info.WorkMultiplier = 256.0;
      info.PowLimit = uint256S("0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f");
      info.WorkType = EWorkZCash;
    } else {
      info.Name.clear();
    }

    return info;
  }
};
